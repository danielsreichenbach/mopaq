---
name: Main Branch CI

on:
    push:
        branches: [main]
        paths-ignore:
            - '**.md'
            - 'LICENSE*'
            - '.gitignore'
            - 'docs/**'

env:
    CARGO_TERM_COLOR: always
    RUSTFLAGS: '-D warnings'
    RUST_BACKTRACE: 1

jobs:
    build:
        name: Build and Test
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: rustfmt, clippy

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Check formatting
              uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check

            - name: Check with clippy
              uses: actions-rs/cargo@v1
              with:
                  command: clippy
                  args: --all-targets --all-features -- -D warnings

            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --verbose

            - name: Run tests
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: --verbose

            - name: Run doc tests
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: --doc

            - name: Generate documentation
              uses: actions-rs/cargo@v1
              with:
                  command: doc
                  args: --no-deps

            - name: Upload documentation artifact
              uses: actions/upload-artifact@v4
              with:
                  name: documentation
                  path: target/doc

    cross-platform:
        name: Cross-platform Tests
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --verbose

            - name: Run tests
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: --verbose

    coverage:
        name: Code Coverage
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: llvm-tools-preview

            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov

            - name: Generate code coverage
              run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  files: lcov.info
                  fail_ci_if_error: false
