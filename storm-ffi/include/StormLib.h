#ifndef STORMLIB_H
#define STORMLIB_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

/* Generated with cbindgen:0.27.0 */

/* Warning: This file is auto-generated by cbindgen. Do not modify manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

// CRC32 checksums are present
#define AttributeFlags_CRC32 1

// File timestamps are present
#define AttributeFlags_FILETIME 2

// MD5 hashes are present
#define AttributeFlags_MD5 4

// Patch bit indicators are present
#define AttributeFlags_PATCH_BIT 8

// All attributes are present
#define AttributeFlags_ALL 15

// Expected version for the attributes file
#define Attributes_EXPECTED_VERSION 100

// Archive handle type
typedef void *HANDLE;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

// Open an MPQ archive
bool SFileOpenArchive(const char *filename, uint32_t priority, uint32_t flags, HANDLE *handle);

// Close an MPQ archive
bool SFileCloseArchive(HANDLE handle);

// Open a file in the archive
bool SFileOpenFileEx(HANDLE archive,
                     const char *filename,
                     uint32_t search_scope,
                     HANDLE *file_handle);

// Close a file
bool SFileCloseFile(HANDLE file);

// Read from a file
bool SFileReadFile(HANDLE file, void *buffer, uint32_t to_read, uint32_t *read, void *overlapped);

// Get file size
uint32_t SFileGetFileSize(HANDLE file, uint32_t *high);

// Set file position
uint32_t SFileSetFilePointer(HANDLE file,
                             int32_t file_pos,
                             int32_t *file_pos_high,
                             uint32_t move_method);

// Check if file exists in archive
bool SFileHasFile(HANDLE archive, const char *filename);

// Get file information
bool SFileGetFileInfo(HANDLE file_or_archive,
                      uint32_t info_class,
                      void *buffer,
                      uint32_t buffer_size,
                      uint32_t *size_needed);

// Get archive name from handle
bool SFileGetArchiveName(HANDLE archive, char *buffer, uint32_t buffer_size);

// Enumerate files in archive
bool SFileEnumFiles(HANDLE archive,
                    const char *search_mask,
                    const char *list_file,
                    bool (*callback)(const char*, void*),
                    void *user_data);

// Set locale for file operations
uint32_t SFileSetLocale(uint32_t locale);

// Get current locale
uint32_t SFileGetLocale(void);

// Get last error
uint32_t GetLastError(void);

// Set last error
void SetLastError(uint32_t error);

// Get file name from handle
bool SFileGetFileName(HANDLE file, char *buffer);

#ifdef __cplusplus
}  // extern "C"
#endif  // __cplusplus


#ifdef __cplusplus
}
#endif

#endif /* STORMLIB_H */
